name: oblivix

services:
  # Nginx
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - php

  # PHP
  php:
    container_name: php
    build:
      context: ./docker/php
    entrypoint: ["sh", "/usr/local/bin/docker-entrypoint.sh"]
    volumes:
      - ./src:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mysql:
        condition: service_healthy

  # MongoDB
  mongodb:
    container_name: mongodb
    image: mongo:4.4
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootPassword
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_AUTH_DATABASE: ${MONGO_AUTH_DATABASE}
      MONGO_USER: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./docker/mongodb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - ./.data/mongodb:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Redis
  redis:
    container_name: redis
    image: redis:6.0
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10

  # MySQL
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - ${DB_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./.data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  # phpMyAdmin
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: ${DB_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - 8081:80
    depends_on:
      - mysql

  #MailPit
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    volumes:
        - ./.data/mailpit:/data
        - ./docker/mailpit/certs:/certs
    ports:
      - 8025:8025
      - ${MAIL_PORT}:1025
    environment:
      MP_SMTP_AUTH: "${MAIL_USERNAME}:${MAIL_PASSWORD}"
      MP_SMTP_TLS_CERT: ./certs/cert.pem
      MP_SMTP_TLS_KEY: ./certs/key.pem

  # MinIO
  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio
    volumes:
      - ./.data/minio:/data
    ports:
      - "14009:9000"
      - "14010:9001"
    restart: always